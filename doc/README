http://www.mastertheboss.com/maven-hibernate-jpa/maven-and-hibernate-4-tutorial
http://stackoverflow.com/questions/8162054/hibernate-overriding-hibernate-default-schema-property-in-persistence-xml

This project implements the data requirements for a collection reader on the large document collections. The medline data comes from NIH and is loaded by a project called medic:https://github.com/fnl/medic


*** see INSTALL directions below ***

tables describing batches on each collection are created by scripts in src/main/sql and used with Hibernate

3 data sources:
--------------
- medline
- pubmed central open access (pmcoa)
- elsevier

-1. Code
	
	Florian Leitner's Medic code for creating and updating a local 
	medline: https://github.com/fnl/medic

	UIMA Collection Readers to pull from an embelished medic installation:
	github group: https://github.com/organizations/UCDenver-ccp/ccp_nlp/doc

	UIMA analysis engines to convert the XML formats from Elsevier and PMC
	to a local one, and then convert that to plain text are available in
	the same repo.

	Local subversion code is available at:
	SVNROOT=http://compbio.ucdenver.edu/svn/ (external or internal)
	SVNROOT=https://amc-bakeoff.ucdenver.edu/svn/ (internal)

0. PostgreSQL
	This collection of scripts for keeping track of our files is based on
 	a local RDBMS installation of Medline. As of this writing it is hosted
	on ....123.80 my desktop iMac, but is planned to be migrated to amc-bakeoff.
	The tables created by and used by Florian Leitner's Medic software is
 	in the public shema. Tables relating to PMC OA are in the pmcoa schema.
	Tables relating to the Elsevier collection are in the elsevier schema.
	The database is called medline.

1. Medline
	Medline is a database of paper citations and abstracts available from
	NIH. You get the abstracts from this database after the files are
	loaded into it. These abstracts and related documents from PMC OA
	are keyed by pubmed id: pmid.

	FILES:
	Medline files are downloaded in bulk annually and updated 
    daily (weekly?) to : /RAID3/amc-bakeoff/data/medline/2013/baseline-files
	/RAID3/amc-bakeoff/data/medline/2013/completed-update-files
    As suggested by the name another process uses the directories to keep
    track of its own process of creating rdf files from the updates.

	DATA:
	Florian Leitner's Medic package is used to read the xml from NIH
	and populate  the medline postgreSQL database mentioned above.


	SCRIPTS AND PROCS (in ccp_nlp/doc/src/main/sql):
	- create_medline_batches.sql
	- update_medline_batches.sql (TODO)

	TODO: UPDATES to the database need to be scheduled.
	TODO: amc-bakeoff's storage is really on ....123.77:/RAID3
	  there's no need for amc-bakeoff/data in the path.

2. PMC OA
	PMC OA is a few tarfiles of fulltext articles available from NIH
	at ftp://ftp.ncbi.nlm.nih.gov/pub/pmc.

	FILES:
	There is a job on amc-colfax under the hadoop user to download the
	bulk download weekly:/home/hadoop/bin/download_pmc_oa.sh. The files
	go to: /RAID1/data/fulltext/pmc/files/<journal>

	DATA:
	There is a schema in the medline postgres database for tracking
	these: pmcoa.pmc has pmids and paths (>600,000). pmcoa.pmc_batches
	groups those files into 1000 file batches for use from a UIMA
	CollectionReader: DbCollectionReader available on the UCDenver/CCP
	github group: https://github.com/organizations/UCDenver-ccp

	SCRIPTS AND PROCS (in ccp_nlp/doc/src/main/sql):
	- create_pmc_batches.sql
	- update_pmc_batches.sql (TODO)

	TODO: actually move that githup repo.
	TODO: update the tables as file updates come in

3. Elsevier
	We have an arrangement with Elsevier for a large collection of journal
	articles.  Updates are downloaded daily by a java job on Hudson:
	http://amc-bob.ucdenver.pvt:8081/hudson/
	These files are indexed by pii. Pii is part of the filepath, though
 	not in exactly the right format: the parens and underscores and dashes
	have been removed. The files contiain the proper pii as well as doi.
	** They do not contain pmids! **  This is the fundamental difficulty
	with these files and linking them to the medline database used to
	drive the DbCollectionReader derivatives (one for each of elsevier,
	medline and pmcoa)..

	1am_colfax_elsevier-download runs code fom the subversion-hosted
	project: ccp/digitallibrary via a maven pom file: 
	scripts/elsevier-daily-download/colfax-pom.xml

	FILES:
	/net/amc-colfax/RAID1/data/fulltext/elsevier/historical
	/net/amc-colfax/RAID1/data/fulltext/elsevier/daily (TODO: combine with untar)
	/net/amc-colfax/RAID1/data/fulltext/elsevier/untar

	DATA:
	This stuff needs its own schema: elsevier (TODO).

	The table *medline_doi* was harvested from the (soon defunct)
	site www.pmid2doi.org.

	The table elsevier_records contains pii, pii_path, path, doi 
	(when available, always? TODO) title, author last-name list,
	and booleans describing the success of regular expressions to
	find abstracts and the presence of sections.

	PECULIARITIES:
	Elsevier doc.s aren't indexed by PMID, rather PII. It's in the XML as
	well as the pathname. DOI is also available. Mapping from pmid to DOI
	is partially available. My understanding is that trying to match papers
	to papers without the use of an ID is difficult.
	
	Elsevier doc.s get updated without a change in ID(ii). It's only a guess
	that the most recently received version is the best. AFAICT there is no
	date that relates to these updates beyond the UNC0*\d* numbers in the 
	path that increment daily. The day-to-day ramifications are that duplicate
	pii's exist and the elsevier_records table uses an artificial ID that
	increments with each insert ( a sequence ). Retrieval queries must 
	deal with duplicate pii's. The path is available for retreival and
	could be used for distinguishing the desireable document, possibly when
	creating batches. TODO: incorporate the local ID into the meta data to
	pass to UIMA for more careful provenance. TODO: investigate the scope
	of these edits to assess the impact.
		
	SCRIPTS AND PROCS:
	- create medline_doi
	- populate medline_doi
	- update medline_doi (TODO)
	- create and populate elsevier_records: ccp_nlp/doc/src/man/python/elsevier.py 
	- update elsevier_records (TODO)

INSTALL
-----------
	This stuff isn't purely maven and artifactory driven. There is an install script
	at src/main/bash/install.sh that does a "mvn install:install" on some jars
	in src/main/resources that contain dtd information.
